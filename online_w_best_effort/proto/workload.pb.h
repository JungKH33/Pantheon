// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: workload.proto

#ifndef PROTOBUF_INCLUDED_workload_2eproto
#define PROTOBUF_INCLUDED_workload_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_workload_2eproto 

namespace protobuf_workload_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_workload_2eproto
class Workload;
class WorkloadDefaultTypeInternal;
extern WorkloadDefaultTypeInternal _Workload_default_instance_;
class Workloads;
class WorkloadsDefaultTypeInternal;
extern WorkloadsDefaultTypeInternal _Workloads_default_instance_;
namespace google {
namespace protobuf {
template<> ::Workload* Arena::CreateMaybeMessage<::Workload>(Arena*);
template<> ::Workloads* Arena::CreateMaybeMessage<::Workloads>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class Workloads : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Workloads) */ {
 public:
  Workloads();
  virtual ~Workloads();

  Workloads(const Workloads& from);

  inline Workloads& operator=(const Workloads& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Workloads(Workloads&& from) noexcept
    : Workloads() {
    *this = ::std::move(from);
  }

  inline Workloads& operator=(Workloads&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Workloads& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Workloads* internal_default_instance() {
    return reinterpret_cast<const Workloads*>(
               &_Workloads_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Workloads* other);
  friend void swap(Workloads& a, Workloads& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Workloads* New() const final {
    return CreateMaybeMessage<Workloads>(NULL);
  }

  Workloads* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Workloads>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Workloads& from);
  void MergeFrom(const Workloads& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Workloads* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Workload workload = 1;
  int workload_size() const;
  void clear_workload();
  static const int kWorkloadFieldNumber = 1;
  ::Workload* mutable_workload(int index);
  ::google::protobuf::RepeatedPtrField< ::Workload >*
      mutable_workload();
  const ::Workload& workload(int index) const;
  ::Workload* add_workload();
  const ::google::protobuf::RepeatedPtrField< ::Workload >&
      workload() const;

  // @@protoc_insertion_point(class_scope:Workloads)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Workload > workload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_workload_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Workload : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Workload) */ {
 public:
  Workload();
  virtual ~Workload();

  Workload(const Workload& from);

  inline Workload& operator=(const Workload& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Workload(Workload&& from) noexcept
    : Workload() {
    *this = ::std::move(from);
  }

  inline Workload& operator=(Workload&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Workload& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Workload* internal_default_instance() {
    return reinterpret_cast<const Workload*>(
               &_Workload_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Workload* other);
  friend void swap(Workload& a, Workload& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Workload* New() const final {
    return CreateMaybeMessage<Workload>(NULL);
  }

  Workload* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Workload>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Workload& from);
  void MergeFrom(const Workload& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Workload* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 shape = 5;
  int shape_size() const;
  void clear_shape();
  static const int kShapeFieldNumber = 5;
  ::google::protobuf::int64 shape(int index) const;
  void set_shape(int index, ::google::protobuf::int64 value);
  void add_shape(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      shape() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_shape();

  // string model_name = 1;
  void clear_model_name();
  static const int kModelNameFieldNumber = 1;
  const ::std::string& model_name() const;
  void set_model_name(const ::std::string& value);
  #if LANG_CXX11
  void set_model_name(::std::string&& value);
  #endif
  void set_model_name(const char* value);
  void set_model_name(const char* value, size_t size);
  ::std::string* mutable_model_name();
  ::std::string* release_model_name();
  void set_allocated_model_name(::std::string* model_name);

  // uint64 release = 2;
  void clear_release();
  static const int kReleaseFieldNumber = 2;
  ::google::protobuf::uint64 release() const;
  void set_release(::google::protobuf::uint64 value);

  // uint64 deadline = 3;
  void clear_deadline();
  static const int kDeadlineFieldNumber = 3;
  ::google::protobuf::uint64 deadline() const;
  void set_deadline(::google::protobuf::uint64 value);

  // int32 id = 6;
  void clear_id();
  static const int kIdFieldNumber = 6;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Workload)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > shape_;
  mutable int _shape_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr model_name_;
  ::google::protobuf::uint64 release_;
  ::google::protobuf::uint64 deadline_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_workload_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Workloads

// repeated .Workload workload = 1;
inline int Workloads::workload_size() const {
  return workload_.size();
}
inline void Workloads::clear_workload() {
  workload_.Clear();
}
inline ::Workload* Workloads::mutable_workload(int index) {
  // @@protoc_insertion_point(field_mutable:Workloads.workload)
  return workload_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Workload >*
Workloads::mutable_workload() {
  // @@protoc_insertion_point(field_mutable_list:Workloads.workload)
  return &workload_;
}
inline const ::Workload& Workloads::workload(int index) const {
  // @@protoc_insertion_point(field_get:Workloads.workload)
  return workload_.Get(index);
}
inline ::Workload* Workloads::add_workload() {
  // @@protoc_insertion_point(field_add:Workloads.workload)
  return workload_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Workload >&
Workloads::workload() const {
  // @@protoc_insertion_point(field_list:Workloads.workload)
  return workload_;
}

// -------------------------------------------------------------------

// Workload

// string model_name = 1;
inline void Workload::clear_model_name() {
  model_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Workload::model_name() const {
  // @@protoc_insertion_point(field_get:Workload.model_name)
  return model_name_.GetNoArena();
}
inline void Workload::set_model_name(const ::std::string& value) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Workload.model_name)
}
#if LANG_CXX11
inline void Workload::set_model_name(::std::string&& value) {
  
  model_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Workload.model_name)
}
#endif
inline void Workload::set_model_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Workload.model_name)
}
inline void Workload::set_model_name(const char* value, size_t size) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Workload.model_name)
}
inline ::std::string* Workload::mutable_model_name() {
  
  // @@protoc_insertion_point(field_mutable:Workload.model_name)
  return model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Workload::release_model_name() {
  // @@protoc_insertion_point(field_release:Workload.model_name)
  
  return model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Workload::set_allocated_model_name(::std::string* model_name) {
  if (model_name != NULL) {
    
  } else {
    
  }
  model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_name);
  // @@protoc_insertion_point(field_set_allocated:Workload.model_name)
}

// uint64 release = 2;
inline void Workload::clear_release() {
  release_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Workload::release() const {
  // @@protoc_insertion_point(field_get:Workload.release)
  return release_;
}
inline void Workload::set_release(::google::protobuf::uint64 value) {
  
  release_ = value;
  // @@protoc_insertion_point(field_set:Workload.release)
}

// uint64 deadline = 3;
inline void Workload::clear_deadline() {
  deadline_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Workload::deadline() const {
  // @@protoc_insertion_point(field_get:Workload.deadline)
  return deadline_;
}
inline void Workload::set_deadline(::google::protobuf::uint64 value) {
  
  deadline_ = value;
  // @@protoc_insertion_point(field_set:Workload.deadline)
}

// repeated int64 shape = 5;
inline int Workload::shape_size() const {
  return shape_.size();
}
inline void Workload::clear_shape() {
  shape_.Clear();
}
inline ::google::protobuf::int64 Workload::shape(int index) const {
  // @@protoc_insertion_point(field_get:Workload.shape)
  return shape_.Get(index);
}
inline void Workload::set_shape(int index, ::google::protobuf::int64 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:Workload.shape)
}
inline void Workload::add_shape(::google::protobuf::int64 value) {
  shape_.Add(value);
  // @@protoc_insertion_point(field_add:Workload.shape)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Workload::shape() const {
  // @@protoc_insertion_point(field_list:Workload.shape)
  return shape_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Workload::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:Workload.shape)
  return &shape_;
}

// int32 id = 6;
inline void Workload::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Workload::id() const {
  // @@protoc_insertion_point(field_get:Workload.id)
  return id_;
}
inline void Workload::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Workload.id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_workload_2eproto
